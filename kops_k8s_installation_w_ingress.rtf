{\rtf1\ansi\ansicpg1252\cocoartf2578
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 HelveticaNeue-Bold;\f1\fnil\fcharset0 HelveticaNeue;}
{\colortbl;\red255\green255\blue255;\red67\green67\blue67;\red255\green255\blue255;\red0\green0\blue0;
\red38\green38\blue38;\red246\green246\blue246;\red0\green0\blue255;\red220\green161\blue13;\red0\green0\blue0;
}
{\*\expandedcolortbl;;\cssrgb\c33333\c33333\c33333;\cssrgb\c100000\c100000\c100000;\cssrgb\c0\c0\c0;
\cssrgb\c19608\c19608\c19608;\cssrgb\c97255\c97255\c97255;\cssrgb\c0\c0\c100000;\cssrgb\c89412\c68627\c3922;\csgray\c0;
}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}.}{\leveltext\leveltemplateid1\'02\'00.;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listname ;}\listid1}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}}
\margl1440\margr1440\vieww20540\viewh14080\viewkind0
\deftab560
\pard\pardeftab560\slleading20\partightenfactor0

\f0\b\fs26 \cf0 Using Public/Private DNS (kOps 1.5+)\
\pard\pardeftab560\slleading20\partightenfactor0

\f1\b0 \cf0 By default the assumption is that NS records are publicly available. If you require private DNS records you should modify the commands we run later in this guide to include:\
\pard\pardeftab560\slleading20\qc\partightenfactor0
\cf0 \
\pard\pardeftab560\slleading20\partightenfactor0
\cf0 \
\pard\pardeftab720\sl704\partightenfactor0
\cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Create the cluster using KOPS\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl576\partightenfactor0
\ls1\ilvl0\cf4 \strokec4 Create a S3 bucket to store our clusters state:\cf5 \cb6 \strokec5 $ \cf7 \strokec7 aws s3 mb s3://clusters.dev.pykey.com\cf4 \cb1 \strokec4 \
\ls1\ilvl0\cb3 Export KOPS_STATE_STORE=s3://clusters.dev.pykey.com and then kops will use this location by default:\cf5 \cb6 \strokec5 $ \cf7 \strokec7 export KOPS_STATE_STORE=s3://clusters.dev.pykey.com\cf5 \strokec5        \cf4 \cb1 \strokec4 \
\ls1\ilvl0\cb3 Create a cluster configuration. While the following command does NOT actually create the cloud resources it gives us an opportunity to review the configuration or change it:\cf5 \cb6 \strokec5 $ \cf7 \strokec7 kops create cluster --zones=us-east-1a,us-east-1b,us-east-1c useast1.dev.pykey.com\cf5 \strokec5 \uc0\u8232 \cf4 \cb1 \strokec4 \
\pard\pardeftab560\slleading20\partightenfactor0
\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 \
\

\fs20 \
\
\
\

\fs26 \
kops create cluster --dns private $NAME\
If you have a mix of public and private zones, you will also need to include the\'a0--dns-zone\'a0argument with the hosted zone id you wish to deploy in:\
\pard\pardeftab560\slleading20\qc\partightenfactor0
\cf0 \
\pard\pardeftab560\slleading20\partightenfactor0
\cf0 kops create cluster --dns private --dns-zone ZABCDEFG $NAME\
\pard\pardeftab560\slleading20\pardirnatural\partightenfactor0
\cf0 \
\
\pard\pardeftab560\slleading20\partightenfactor0
\cf0 \
kops get clusters\
aws ec2 describe-availability-zones --region us-east-1\
kops create cluster --zones=us-east-1a,us-east-1b,us-east-1c \'97 $\{NAME\}\
kops update cluster --name serverlessglobe.com --yes --admin\
 kops validate cluster --wait 10m\
 kubectl get nodes\
\pard\pardeftab560\slleading20\pardirnatural\partightenfactor0
\cf0 \
\
\
\
\
\
export NAME=serverlessglobe.com\
export KOPS_STATE_STORE={\field{\*\fldinst{HYPERLINK "s3://serverlessglobe.com"}}{\fldrslt \cf8 s3://serverlessglobe.com}}\
\pard\pardeftab560\slleading20\partightenfactor0
\cf0 kops create cluster --zones=us-east-1a,us-east-1b,us-east-1c --master-count 3 --master-size t3.medium --node-count 3 --node-size t3.medium $\{NAME\}\
kops update cluster --name serverlessglobe.com --yes --admin\
kops validate cluster --wait 10m\
\
\
helm repo add ingress-nginx https://kubernetes.github.io/ingress-nginx\
helm repo update\
kubectl get ns\
kubectl create ns ingress-nginx\
helm install ingress-nginx ingress-nginx/ingress-nginx -n ingress-nginx\
\pard\pardeftab560\slleading20\pardirnatural\partightenfactor0
\cf0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf9 \CocoaLigature0 An example Ingress that makes use of the controller:\
\
  apiVersion: networking.k8s.io/v1beta1\
  kind: Ingress\
  metadata:\
    annotations:\
      kubernetes.io/ingress.class: nginx\
    name: example\
    namespace: foo\
  spec:\
    rules:\
      - host: www.example.com\
        http:\
          paths:\
            - backend:\
                serviceName: exampleService\
                servicePort: 80\
              path: /\
    # This section is only required if TLS is to be enabled for the Ingress\
    tls:\
        - hosts:\
            - www.example.com\
          secretName: example-tls\
\
If TLS is enabled for the Ingress, a Secret containing the certificate and key must also be provided:\
\
  apiVersion: v1\
  kind: Secret\
  metadata:\
    name: example-tls\
    namespace: foo\
  data:\
    tls.crt: <base64 encoded cert>\
    tls.key: <base64 encoded key>\
  type: kubernetes.io/tls\
\
\
\
kubectl get pods -n ingress-nginx\
 OUTPUT: \
NAME                                        READY     STATUS    RESTARTS   AGE\
ingress-nginx-controller-57cb5bf694-nm25k   1/1       Running   0          1m\
\
\
CLEAN UP: kops delete cluster serverlessglobe.com --yes}